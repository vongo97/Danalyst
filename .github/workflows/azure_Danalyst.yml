# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Danalyst

on:
  push:
    branches:
      - azure
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read # This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x" # Asegúrate de que sea 18.x para compatibilidad

      - name: npm install with legacy peer deps and build
        run: |
          npm install --legacy-peer-deps
          npm run build --if-present
        # Puedes añadir "npm run test --if-present" si tienes pruebas configuradas

      # PASO DE DEPURACIÓN: Muestra el contenido del directorio antes de la optimización (Windows)
      - name: Debug - List directory contents after build
        run: |
          Write-Host "Listing current directory contents:"
          Get-ChildItem -Path . -Directory -Depth 1 # List directories
          Write-Host "Listing .next directory contents (before optimization):"
          Get-ChildItem -Path ".\.next\" -Recurse -ErrorAction SilentlyContinue # List .next contents, suppress errors if not found

      - name: Optimize deployment size and Zip
        run: |
          # Eliminar archivos innecesarios de la build para reducir el tamaño del artefacto
          # Comandos optimizados para PowerShell en Windows para mayor robustez
          Write-Host "Attempting to remove .next/cache..."
          Remove-Item -Path ".\.next\cache" -Recurse -Force -ErrorAction SilentlyContinue
          Write-Host "Attempting to remove .next/types..."
          Remove-Item -Path ".\.next\types" -Recurse -Force -ErrorAction SilentlyContinue
          
          Write-Host "Attempting to remove server source maps (js.map)..."
          Get-ChildItem -Path ".\.next\server\chunks\" -Filter "*.js.map" -Recurse -ErrorAction SilentlyContinue | ForEach-Object { Remove-Item -Path $_.FullName -Force -ErrorAction SilentlyContinue }
          Get-ChildItem -Path ".\.next\server\src\" -Filter "*.js.map" -Recurse -ErrorAction SilentlyContinue | ForEach-Object { Remove-Item -Path $_.FullName -Force -ErrorAction SilentlyContinue }
          
          Write-Host "Attempting to remove static source maps (js.map)..."
          Get-ChildItem -Path ".\.next\static\chunks\" -Filter "*.js.map" -Recurse -ErrorAction SilentlyContinue | ForEach-Object { Remove-Item -Path $_.FullName -Force -ErrorAction SilentlyContinue }
          Write-Host "Attempting to remove static CSS source maps (css.map)..."
          Get-ChildItem -Path ".\.next\static\css\" -Filter "*.css.map" -Recurse -ErrorAction SilentlyContinue | ForEach-Object { Remove-Item -Path $_.FullName -Force -ErrorAction SilentlyContinue }

          # PASO ADICIONAL: Comprimir la carpeta .next en un archivo zip (Windows)
          Write-Host "Zipping .next folder into node-app.zip..."
          Compress-Archive -Path ".\.next" -DestinationPath ".\node-app.zip" -Force
          Write-Host "Contents of current directory after zipping:"
          Get-ChildItem -Path . -ErrorAction SilentlyContinue
          Write-Host "Size of node-app.zip:"
          (Get-Item ".\node-app.zip").Length / 1MB # Display size in MB

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app # Nombre del artefacto
          path: node-app.zip # <--- ¡SE SUBE EL ARCHIVO ZIP!
          if-no-files-found: error # Forzará un fallo si no encuentra el ZIP

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Esto es requerido para solicitar el JWT
      contents: read # Esto es requerido para actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app # Esto descargará node-app.zip en el workspace del runner

      - name: Extract artifact (node-app.zip)
        run: |
          unzip node-app.zip -d extracted-app # Comando para Linux (ubuntu-latest)
          echo "Contents of extracted-app folder:" # <--- CAMBIADO A ECHO
          ls -F extracted-app/ # <--- CAMBIADO A LS para Linux
      
      - name: Login to Azure
        uses: azure/login@v1 # <--- ¡IMPORTANTE: v1!
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # <--- ¡IMPORTANTE: USA EL SECRETO AZURE_CREDENTIALS!

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: "Danalyst"
          slot-name: "Production"
          package: extracted-app # <--- Se apunta a la carpeta extraída
