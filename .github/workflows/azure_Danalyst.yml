# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Danalyst

on:
  push:
    branches:
      - azure
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read # This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x" # Asegúrate de que sea 18.x para compatibilidad

      - name: npm install with legacy peer deps and build
        run: |
          npm install --legacy-peer-deps
          npm run build --if-present
        # Puedes añadir "npm run test --if-present" si tienes pruebas configuradas

      # PASO DE DEPURACIÓN: Muestra el contenido del directorio antes de la optimización
      - name: Debug - List directory contents after build
        run: |
          Write-Host "Listing current directory contents:"
          Get-ChildItem -Path . -Directory -Depth 1 # List directories
          Write-Host "Listing .next directory contents:"
          Get-ChildItem -Path ".\.next\" -Recurse -ErrorAction SilentlyContinue # List .next contents, suppress errors if not found

      - name: Optimize deployment size
        run: |
          # Eliminar archivos innecesarios de la build para reducir el tamaño del artefacto
          # Comandos optimizados para PowerShell en Windows
          if (Test-Path -Path ".\.next\cache") { Remove-Item -Path ".\.next\cache" -Recurse -Force }
          if (Test-Path -Path ".\.next\server\chunks\*.js.map") { Remove-Item -Path ".\.next\server\chunks\*.js.map" -Recurse -Force }
          if (Test-Path -Path ".\.next\static\chunks\*.js.map") { Remove-Item -Path ".\.next\static\chunks\*.js.map" -Recurse -Force }
          if (Test-Path -Path ".\.next\types") { Remove-Item -Path ".\.next\types" -Recurse -Force }
        
      # PASO DE DEPURACIÓN: Muestra el contenido del directorio después de la optimización
      - name: Debug - List directory contents after optimization
        run: |
          Write-Host "Listing .next directory contents AFTER optimization:"
          Get-ChildItem -Path ".\.next\" -Recurse -ErrorAction SilentlyContinue # List .next contents

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .next/ # <--- ¡IMPORTANTE! Solo sube el output de la build optimizada

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Esto es requerido para solicitar el JWT
      contents: read # Esto es requerido para actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v1 # <--- ¡IMPORTANTE: CAMBIADO A v1!
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # <--- ¡IMPORTANTE: USA EL SECRETO AZURE_CREDENTIALS!

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: "Danalyst"
          slot-name: "Production"
          package: . # Esto es correcto porque el artefacto descargado será el contenido de .next/
